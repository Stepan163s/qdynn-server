#!/bin/bash
# QDYNN-SERVER Update Script

set -e

VERSION="1.0.0"
INSTALL_DIR="/opt/qdynn-server"
CONFIG_DIR="/etc/qdynn"
LOG_DIR="/var/log/qdynn"
SERVICE_NAME="qdynn-server"
BACKUP_DIR="/tmp/qdynn-backup-$(date +%Y%m%d-%H%M%S)"

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m'

# –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏ —Ü–µ–ª–µ–≤–∞—è –≤–µ—Ä—Å–∏–∏ Go
GO_MIN_VERSION="1.21.0"
GO_INSTALL_VERSION="1.22.5"

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[‚úì]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[‚ö†]${NC} $1"
}

log_error() {
    echo -e "${RED}[‚úó]${NC} $1"
    exit 1
}

log_header() {
    echo -e "\n${PURPLE}‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì${NC}"
    echo -e "${WHITE}  üîÑ QDYNN-SERVER v$VERSION - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã${NC}"
    echo -e "${PURPLE}‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì${NC}\n"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Go –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
ensure_go() {
    local has_go=0
    local current_ver=""
    if command -v go >/dev/null 2>&1; then
        has_go=1
        current_ver=$(go version | awk '{print $3}' | sed 's/^go//')
    fi

    if [[ "$has_go" -eq 1 ]]; then
        if dpkg --compare-versions "$current_ver" ge "$GO_MIN_VERSION"; then
            log_success "Go –Ω–∞–π–¥–µ–Ω: –≤–µ—Ä—Å–∏—è $current_ver (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ)"
            return 0
        else
            log_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω Go $current_ver (< $GO_MIN_VERSION). –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
        fi
    else
        log_info "Go –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Go $GO_INSTALL_VERSION..."
    fi

    install_go
}

install_go() {
    local arch
    case "$(uname -m)" in
        x86_64|amd64)
            arch="amd64" ;;
        aarch64|arm64)
            arch="arm64" ;;
        *)
            log_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $(uname -m). –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è amd64 –∏ arm64."
            ;;
    esac

    local tar_name="go${GO_INSTALL_VERSION}.linux-${arch}.tar.gz"
    local url="https://go.dev/dl/${tar_name}"
    log_info "–°–∫–∞—á–∏–≤–∞–µ–º Go ${GO_INSTALL_VERSION} (${arch})..."
    curl -fsSL "$url" -o "/tmp/${tar_name}" || log_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å ${url}"

    log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Go –≤ /usr/local ..."
    rm -rf /usr/local/go
    tar -C /usr/local -xzf "/tmp/${tar_name}" >/dev/null 2>&1 || true
    ln -sf /usr/local/go/bin/go /usr/local/bin/go
    ln -sf /usr/local/go/bin/gofmt /usr/local/bin/gofmt

    cat > /etc/profile.d/go.sh << 'EOF'
export PATH="$PATH:/usr/local/go/bin"
EOF

    if command -v go >/dev/null 2>&1; then
        local new_ver
        new_ver=$(go version | awk '{print $3}' | sed 's/^go//')
        log_success "Go —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: –≤–µ—Ä—Å–∏—è ${new_ver}"
    else
        log_error "Go –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
check_root() {
    if [[ $EUID -ne 0 ]]; then
        log_error "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ root (sudo)"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
create_backup() {
    log_info "–°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é..."
    
    mkdir -p $BACKUP_DIR
    
    # –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if [[ -d "$CONFIG_DIR" ]]; then
        cp -r $CONFIG_DIR $BACKUP_DIR/configs
    fi
    
    # –ö–æ–ø–∏—Ä—É–µ–º –ª–æ–≥–∏
    if [[ -d "$LOG_DIR" ]]; then
        cp -r $LOG_DIR $BACKUP_DIR/logs
    fi
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
    if [[ -f "$INSTALL_DIR/VERSION" ]]; then
        cp $INSTALL_DIR/VERSION $BACKUP_DIR/
    fi
    
    log_success "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $BACKUP_DIR"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
stop_service() {
    log_info "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º QDYNN Server..."
    
    if systemctl is-active --quiet $SERVICE_NAME; then
        systemctl stop $SERVICE_NAME
        log_success "–°–µ—Ä–≤–∏—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        log_info "–°–µ—Ä–≤–∏—Å —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ DNSTT
update_dnstt() {
    log_info "–û–±–Ω–æ–≤–ª—è–µ–º DNSTT –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏..."
    
    cd /tmp
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∞—Å—å –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞
    if [[ -d "dnstt-update" ]]; then
        log_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è dnstt-update. –£–¥–∞–ª—è–µ–º..."
        rm -rf dnstt-update
    fi
    git clone https://www.bamsoftware.com/git/dnstt.git dnstt-update > /dev/null 2>&1
    cd dnstt-update
    
    # –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é (–∏–º—è —Ñ–∞–π–ª–∞, —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º)
    go build -o dnstt-server.bin ./dnstt-server > /dev/null 2>&1
    if [[ ! -f dnstt-server.bin ]]; then
        log_error "–°–±–æ—Ä–∫–∞ DNSTT –Ω–µ —É–¥–∞–ª–∞—Å—å: –±–∏–Ω–∞—Ä–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é
    cp dnstt-server.bin $INSTALL_DIR/bin/dnstt-server
    chmod +x $INSTALL_DIR/bin/dnstt-server
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    cd /
    rm -rf /tmp/dnstt-update
    
    log_success "DNSTT –æ–±–Ω–æ–≤–ª–µ–Ω"
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤
update_scripts() {
    log_info "–û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç—ã —Å–∏—Å—Ç–µ–º—ã..."
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤
    local temp_dir="/tmp/qdynn-scripts-update"
    mkdir -p $temp_dir
    
    # GitHub Raw URLs –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤
    curl -fsSL "https://raw.githubusercontent.com/Stepan163s/qdynn-server/main/scripts/cli-functions.sh" \
         -o $temp_dir/cli-functions.sh
    curl -fsSL "https://raw.githubusercontent.com/Stepan163s/qdynn-server/main/scripts/create-scripts.sh" \
         -o $temp_dir/create-scripts.sh
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç—ã
    cp $temp_dir/*.sh $INSTALL_DIR/scripts/
    chmod +x $INSTALL_DIR/scripts/*.sh
    
    # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
    $INSTALL_DIR/scripts/create-scripts.sh
    
    rm -rf $temp_dir
    log_success "–°–∫—Ä–∏–ø—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ CLI
update_cli() {
    log_info "–û–±–Ω–æ–≤–ª—è–µ–º CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å..."
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º CLI –ª–æ–∫–∞–ª—å–Ω–æ, –∫–∞–∫ –≤ install.sh
    cat > /usr/local/bin/qdynn << 'EOF'
#!/bin/bash
# QDYNN-SERVER CLI Interface

VERSION="1.0.0"
INSTALL_DIR="/opt/qdynn-server"
CONFIG_DIR="/etc/qdynn" 
LOG_DIR="/var/log/qdynn"
SERVICE_NAME="qdynn-server"

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m'

source $INSTALL_DIR/scripts/cli-functions.sh

case "$1" in
    start)     start_server ;;
    stop)      stop_server ;;
    restart)   restart_server ;;
    status)    show_status ;;
    logs)      show_logs "${2:-50}" ;;
    config)    configure_server "$2" "$3" ;;
    clients)   manage_clients "$2" "$3" ;;
    update)    update_server ;;
    *)         show_help ;;
esac
EOF
    
    chmod +x /usr/local/bin/qdynn
    log_success "CLI –æ–±–Ω–æ–≤–ª–µ–Ω"
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫)
update_config() {
    log_info "–û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç–∞—Ä–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è, –º–∏–≥—Ä–∏—Ä—É–µ–º –µ–µ
    if [[ -f "$CONFIG_DIR/server.conf" ]]; then
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç–∞—Ä—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        local temp_config="/tmp/server.conf.new"
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —à–∞–±–ª–æ–Ω
        curl -fsSL "https://raw.githubusercontent.com/Stepan163s/qdynn-server/main/configs/server.conf.template" \
             -o $temp_config
        
        # –ü–µ—Ä–µ–Ω–æ—Å–∏–º —Å—Ç–∞—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        source "$CONFIG_DIR/server.conf"
        
        sed -i "s/SERVER_DOMAIN=.*/SERVER_DOMAIN=\"$SERVER_DOMAIN\"/" $temp_config
        sed -i "s/EXTERNAL_IP=.*/EXTERNAL_IP=\"$EXTERNAL_IP\"/" $temp_config
        sed -i "s/PRIVATE_KEY=.*/PRIVATE_KEY=\"$PRIVATE_KEY\"/" $temp_config
        sed -i "s/PUBLIC_KEY=.*/PUBLIC_KEY=\"$PUBLIC_KEY\"/" $temp_config
        sed -i "s/MAX_CLIENTS=.*/MAX_CLIENTS=\"$MAX_CLIENTS\"/" $temp_config
        
        # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        cp $temp_config $CONFIG_DIR/server.conf
        rm $temp_config
        
        log_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"
    else
        log_warning "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è"
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∫–∞–∫ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ
        generate_new_config
    fi
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
generate_new_config() {
    PRIVATE_KEY=$(openssl rand -hex 32)
    PUBLIC_KEY=$(echo -n $PRIVATE_KEY | xxd -r -p | openssl dgst -sha256 -binary | xxd -p -c 32)
    EXTERNAL_IP=$(curl -s ifconfig.me || curl -s ipinfo.io/ip || echo "YOUR_SERVER_IP")
    
    cat > $CONFIG_DIR/server.conf << EOF
SERVER_DOMAIN="tunnel.$(hostname -f 2>/dev/null || echo 'example.com')"
EXTERNAL_IP="$EXTERNAL_IP"
DNS_PORT="53"
HTTPS_PORT="443"
PRIVATE_KEY="$PRIVATE_KEY"
PUBLIC_KEY="$PUBLIC_KEY"
MAX_CLIENTS="100"
LOG_LEVEL="INFO"
ENABLE_SSL="true"
AUTO_UPDATE="false"
EOF
    
    chown qdynn:qdynn $CONFIG_DIR/server.conf
    chmod 640 $CONFIG_DIR/server.conf
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
start_service() {
    log_info "–ó–∞–ø—É—Å–∫–∞–µ–º QDYNN Server..."

    # –†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—É—Ç–∞–Ω–∏—Ü—ã
    ts=$(date +%Y%m%d-%H%M%S)
    for f in dnstt.log server.log monitor.log update.log; do
        if [[ -s "$LOG_DIR/$f" ]]; then
            mv "$LOG_DIR/$f" "$LOG_DIR/${f%.log}-$ts.log"
        fi
        : > "$LOG_DIR/$f"
    done
    find "$LOG_DIR" -type f -name "*-*.log" -mtime +14 -delete 2>/dev/null || true

    systemctl daemon-reload
    # –û–±–Ω–æ–≤–ª—è–µ–º —é–Ω–∏—Ç: –¥–∞—ë–º –ø—Ä–∞–≤–∞ –Ω–∞ –ø–æ—Ä—Ç 53 –∏ –ª–æ–≥–∏
    if grep -q "ExecStart=/opt/qdynn-server/scripts/start-server.sh" /etc/systemd/system/qdynn-server.service 2>/dev/null; then
        sed -i 's/^\s*AmbientCapabilities.*/AmbientCapabilities=CAP_NET_BIND_SERVICE/g' /etc/systemd/system/qdynn-server.service 2>/dev/null || true
        sed -i 's/^\s*CapabilityBoundingSet.*/CapabilityBoundingSet=CAP_NET_BIND_SERVICE/g' /etc/systemd/system/qdynn-server.service 2>/dev/null || true
        sed -i 's/^\s*LogsDirectory.*/LogsDirectory=qdynn/g' /etc/systemd/system/qdynn-server.service 2>/dev/null || true
        if ! grep -q '^LogsDirectory=qdynn' /etc/systemd/system/qdynn-server.service 2>/dev/null; then
            sed -i '/^ReadWritePaths=/a LogsDirectory=qdynn' /etc/systemd/system/qdynn-server.service 2>/dev/null || true
        fi
        if ! grep -q '^AmbientCapabilities=CAP_NET_BIND_SERVICE' /etc/systemd/system/qdynn-server.service 2>/dev/null; then
            sed -i '/^# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å/a AmbientCapabilities=CAP_NET_BIND_SERVICE\nCapabilityBoundingSet=CAP_NET_BIND_SERVICE' /etc/systemd/system/qdynn-server.service 2>/dev/null || true
        fi
    fi
    systemctl start $SERVICE_NAME
    
    if systemctl is-active --quiet $SERVICE_NAME; then
        log_success "–°–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
    else
        log_error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏
update_version() {
    echo "$VERSION" > $INSTALL_DIR/VERSION
    chown qdynn:qdynn $INSTALL_DIR/VERSION
}

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
cleanup() {
    log_info "–û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
    find /tmp -name "qdynn-backup-*" -type d -mtime +30 -exec rm -rf {} + 2>/dev/null || true
    
    log_success "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
verify_update() {
    log_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    local files_to_check=(
        "$INSTALL_DIR/bin/dnstt-server"
        "$CONFIG_DIR/server.conf"
        "/usr/local/bin/qdynn"
        "$INSTALL_DIR/scripts/cli-functions.sh"
    )
    
    for file in "${files_to_check[@]}"; do
        if [[ ! -f "$file" ]]; then
            log_error "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–∞–∂–Ω—ã–π —Ñ–∞–π–ª: $file"
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
    if systemctl is-active --quiet $SERVICE_NAME; then
        log_success "–°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    else
        log_warning "–°–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
    fi
    
    log_success "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log_header
    check_root
    create_backup
    stop_service
    ensure_go
    update_dnstt
    update_scripts
    update_cli
    update_config
    update_version
    start_service
    verify_update
    cleanup
    
    echo -e "\n${GREEN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${GREEN}‚ïë         –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!          ‚ïë${NC}"
    echo -e "${GREEN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}\n"
    
    echo -e "${CYAN}–ß—Ç–æ –Ω–æ–≤–æ–≥–æ:${NC}"
    echo -e "‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω DNSTT –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏"
    echo -e "‚Ä¢ –£–ª—É—á—à–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"  
    echo -e "‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏"
    echo -e "‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ CLI"
    
    echo -e "\n${BLUE}–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è:${NC} $BACKUP_DIR"
    echo -e "${BLUE}–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å:${NC} qdynn status"
    echo -e "${BLUE}–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏:${NC} qdynn logs\n"
}

# –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
main "$@"
